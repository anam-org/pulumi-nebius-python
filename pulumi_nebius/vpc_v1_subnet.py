# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['VpcV1SubnetArgs', 'VpcV1Subnet']

@pulumi.input_type
class VpcV1SubnetArgs:
    def __init__(__self__, *,
                 network_id: pulumi.Input[_builtins.str],
                 parent_id: pulumi.Input[_builtins.str],
                 ipv4_private_pools: Optional[pulumi.Input['VpcV1SubnetIpv4PrivatePoolsArgs']] = None,
                 ipv4_public_pools: Optional[pulumi.Input['VpcV1SubnetIpv4PublicPoolsArgs']] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 metadata: Optional[pulumi.Input['VpcV1SubnetMetadataArgs']] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a VpcV1Subnet resource.
        :param pulumi.Input[_builtins.str] network_id: Network ID.
        :param pulumi.Input[_builtins.str] parent_id: Identifier of the parent resource to which the resource belongs.
        :param pulumi.Input['VpcV1SubnetIpv4PrivatePoolsArgs'] ipv4_private_pools: Pools for private ipv4 addresses. Default is 'use_network_pools = true'
        :param pulumi.Input['VpcV1SubnetIpv4PublicPoolsArgs'] ipv4_public_pools: Pools for public ipv4 addresses. Default is 'use_network_pools = true'
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] labels: Labels associated with the resource.
        :param pulumi.Input['VpcV1SubnetMetadataArgs'] metadata: Metadata for the subnet resource. `metadata.parent_id` represents IAM container ### Inner value description Common
               resource metadata.
        :param pulumi.Input[_builtins.str] name: Human readable name for the resource.
        """
        pulumi.set(__self__, "network_id", network_id)
        pulumi.set(__self__, "parent_id", parent_id)
        if ipv4_private_pools is not None:
            pulumi.set(__self__, "ipv4_private_pools", ipv4_private_pools)
        if ipv4_public_pools is not None:
            pulumi.set(__self__, "ipv4_public_pools", ipv4_public_pools)
        if labels is not None:
            pulumi.set(__self__, "labels", labels)
        if metadata is not None:
            pulumi.set(__self__, "metadata", metadata)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="networkId")
    def network_id(self) -> pulumi.Input[_builtins.str]:
        """
        Network ID.
        """
        return pulumi.get(self, "network_id")

    @network_id.setter
    def network_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "network_id", value)

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> pulumi.Input[_builtins.str]:
        """
        Identifier of the parent resource to which the resource belongs.
        """
        return pulumi.get(self, "parent_id")

    @parent_id.setter
    def parent_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "parent_id", value)

    @_builtins.property
    @pulumi.getter(name="ipv4PrivatePools")
    def ipv4_private_pools(self) -> Optional[pulumi.Input['VpcV1SubnetIpv4PrivatePoolsArgs']]:
        """
        Pools for private ipv4 addresses. Default is 'use_network_pools = true'
        """
        return pulumi.get(self, "ipv4_private_pools")

    @ipv4_private_pools.setter
    def ipv4_private_pools(self, value: Optional[pulumi.Input['VpcV1SubnetIpv4PrivatePoolsArgs']]):
        pulumi.set(self, "ipv4_private_pools", value)

    @_builtins.property
    @pulumi.getter(name="ipv4PublicPools")
    def ipv4_public_pools(self) -> Optional[pulumi.Input['VpcV1SubnetIpv4PublicPoolsArgs']]:
        """
        Pools for public ipv4 addresses. Default is 'use_network_pools = true'
        """
        return pulumi.get(self, "ipv4_public_pools")

    @ipv4_public_pools.setter
    def ipv4_public_pools(self, value: Optional[pulumi.Input['VpcV1SubnetIpv4PublicPoolsArgs']]):
        pulumi.set(self, "ipv4_public_pools", value)

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Labels associated with the resource.
        """
        return pulumi.get(self, "labels")

    @labels.setter
    def labels(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "labels", value)

    @_builtins.property
    @pulumi.getter
    def metadata(self) -> Optional[pulumi.Input['VpcV1SubnetMetadataArgs']]:
        """
        Metadata for the subnet resource. `metadata.parent_id` represents IAM container ### Inner value description Common
        resource metadata.
        """
        return pulumi.get(self, "metadata")

    @metadata.setter
    def metadata(self, value: Optional[pulumi.Input['VpcV1SubnetMetadataArgs']]):
        pulumi.set(self, "metadata", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Human readable name for the resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _VpcV1SubnetState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_private_pools: Optional[pulumi.Input['VpcV1SubnetIpv4PrivatePoolsArgs']] = None,
                 ipv4_public_pools: Optional[pulumi.Input['VpcV1SubnetIpv4PublicPoolsArgs']] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 metadata: Optional[pulumi.Input['VpcV1SubnetMetadataArgs']] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_version: Optional[pulumi.Input[_builtins.float]] = None,
                 status: Optional[pulumi.Input['VpcV1SubnetStatusArgs']] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering VpcV1Subnet resources.
        :param pulumi.Input[_builtins.str] created_at: Timestamp indicating when the resource was created. A string representing a timestamp in [ISO
               8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ` or `YYYY-MM-DDTHH:MM:SS.SSS±HH:MM`
        :param pulumi.Input['VpcV1SubnetIpv4PrivatePoolsArgs'] ipv4_private_pools: Pools for private ipv4 addresses. Default is 'use_network_pools = true'
        :param pulumi.Input['VpcV1SubnetIpv4PublicPoolsArgs'] ipv4_public_pools: Pools for public ipv4 addresses. Default is 'use_network_pools = true'
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] labels: Labels associated with the resource.
        :param pulumi.Input['VpcV1SubnetMetadataArgs'] metadata: Metadata for the subnet resource. `metadata.parent_id` represents IAM container ### Inner value description Common
               resource metadata.
        :param pulumi.Input[_builtins.str] name: Human readable name for the resource.
        :param pulumi.Input[_builtins.str] network_id: Network ID.
        :param pulumi.Input[_builtins.str] parent_id: Identifier of the parent resource to which the resource belongs.
        :param pulumi.Input[_builtins.float] resource_version: Version of the resource for safe concurrent modifications and consistent reads. Positive and monotonically increases on
               each resource spec change (but *not* on each change of the resource's container(s) or status). Service allows zero value
               or current.
        :param pulumi.Input['VpcV1SubnetStatusArgs'] status: Status of the subnet.
        :param pulumi.Input[_builtins.str] updated_at: Timestamp indicating when the resource was last updated. A string representing a timestamp in [ISO
               8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ` or `YYYY-MM-DDTHH:MM:SS.SSS±HH:MM`
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if ipv4_private_pools is not None:
            pulumi.set(__self__, "ipv4_private_pools", ipv4_private_pools)
        if ipv4_public_pools is not None:
            pulumi.set(__self__, "ipv4_public_pools", ipv4_public_pools)
        if labels is not None:
            pulumi.set(__self__, "labels", labels)
        if metadata is not None:
            pulumi.set(__self__, "metadata", metadata)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_id is not None:
            pulumi.set(__self__, "network_id", network_id)
        if parent_id is not None:
            pulumi.set(__self__, "parent_id", parent_id)
        if resource_version is not None:
            pulumi.set(__self__, "resource_version", resource_version)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Timestamp indicating when the resource was created. A string representing a timestamp in [ISO
        8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ` or `YYYY-MM-DDTHH:MM:SS.SSS±HH:MM`
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="ipv4PrivatePools")
    def ipv4_private_pools(self) -> Optional[pulumi.Input['VpcV1SubnetIpv4PrivatePoolsArgs']]:
        """
        Pools for private ipv4 addresses. Default is 'use_network_pools = true'
        """
        return pulumi.get(self, "ipv4_private_pools")

    @ipv4_private_pools.setter
    def ipv4_private_pools(self, value: Optional[pulumi.Input['VpcV1SubnetIpv4PrivatePoolsArgs']]):
        pulumi.set(self, "ipv4_private_pools", value)

    @_builtins.property
    @pulumi.getter(name="ipv4PublicPools")
    def ipv4_public_pools(self) -> Optional[pulumi.Input['VpcV1SubnetIpv4PublicPoolsArgs']]:
        """
        Pools for public ipv4 addresses. Default is 'use_network_pools = true'
        """
        return pulumi.get(self, "ipv4_public_pools")

    @ipv4_public_pools.setter
    def ipv4_public_pools(self, value: Optional[pulumi.Input['VpcV1SubnetIpv4PublicPoolsArgs']]):
        pulumi.set(self, "ipv4_public_pools", value)

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Labels associated with the resource.
        """
        return pulumi.get(self, "labels")

    @labels.setter
    def labels(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "labels", value)

    @_builtins.property
    @pulumi.getter
    def metadata(self) -> Optional[pulumi.Input['VpcV1SubnetMetadataArgs']]:
        """
        Metadata for the subnet resource. `metadata.parent_id` represents IAM container ### Inner value description Common
        resource metadata.
        """
        return pulumi.get(self, "metadata")

    @metadata.setter
    def metadata(self, value: Optional[pulumi.Input['VpcV1SubnetMetadataArgs']]):
        pulumi.set(self, "metadata", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Human readable name for the resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="networkId")
    def network_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Network ID.
        """
        return pulumi.get(self, "network_id")

    @network_id.setter
    def network_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_id", value)

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Identifier of the parent resource to which the resource belongs.
        """
        return pulumi.get(self, "parent_id")

    @parent_id.setter
    def parent_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "parent_id", value)

    @_builtins.property
    @pulumi.getter(name="resourceVersion")
    def resource_version(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Version of the resource for safe concurrent modifications and consistent reads. Positive and monotonically increases on
        each resource spec change (but *not* on each change of the resource's container(s) or status). Service allows zero value
        or current.
        """
        return pulumi.get(self, "resource_version")

    @resource_version.setter
    def resource_version(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "resource_version", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input['VpcV1SubnetStatusArgs']]:
        """
        Status of the subnet.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input['VpcV1SubnetStatusArgs']]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Timestamp indicating when the resource was last updated. A string representing a timestamp in [ISO
        8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ` or `YYYY-MM-DDTHH:MM:SS.SSS±HH:MM`
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("nebius:index/vpcV1Subnet:VpcV1Subnet")
class VpcV1Subnet(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ipv4_private_pools: Optional[pulumi.Input[Union['VpcV1SubnetIpv4PrivatePoolsArgs', 'VpcV1SubnetIpv4PrivatePoolsArgsDict']]] = None,
                 ipv4_public_pools: Optional[pulumi.Input[Union['VpcV1SubnetIpv4PublicPoolsArgs', 'VpcV1SubnetIpv4PublicPoolsArgsDict']]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 metadata: Optional[pulumi.Input[Union['VpcV1SubnetMetadataArgs', 'VpcV1SubnetMetadataArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a VpcV1Subnet resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['VpcV1SubnetIpv4PrivatePoolsArgs', 'VpcV1SubnetIpv4PrivatePoolsArgsDict']] ipv4_private_pools: Pools for private ipv4 addresses. Default is 'use_network_pools = true'
        :param pulumi.Input[Union['VpcV1SubnetIpv4PublicPoolsArgs', 'VpcV1SubnetIpv4PublicPoolsArgsDict']] ipv4_public_pools: Pools for public ipv4 addresses. Default is 'use_network_pools = true'
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] labels: Labels associated with the resource.
        :param pulumi.Input[Union['VpcV1SubnetMetadataArgs', 'VpcV1SubnetMetadataArgsDict']] metadata: Metadata for the subnet resource. `metadata.parent_id` represents IAM container ### Inner value description Common
               resource metadata.
        :param pulumi.Input[_builtins.str] name: Human readable name for the resource.
        :param pulumi.Input[_builtins.str] network_id: Network ID.
        :param pulumi.Input[_builtins.str] parent_id: Identifier of the parent resource to which the resource belongs.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: VpcV1SubnetArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a VpcV1Subnet resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param VpcV1SubnetArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(VpcV1SubnetArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ipv4_private_pools: Optional[pulumi.Input[Union['VpcV1SubnetIpv4PrivatePoolsArgs', 'VpcV1SubnetIpv4PrivatePoolsArgsDict']]] = None,
                 ipv4_public_pools: Optional[pulumi.Input[Union['VpcV1SubnetIpv4PublicPoolsArgs', 'VpcV1SubnetIpv4PublicPoolsArgsDict']]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 metadata: Optional[pulumi.Input[Union['VpcV1SubnetMetadataArgs', 'VpcV1SubnetMetadataArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = VpcV1SubnetArgs.__new__(VpcV1SubnetArgs)

            __props__.__dict__["ipv4_private_pools"] = ipv4_private_pools
            __props__.__dict__["ipv4_public_pools"] = ipv4_public_pools
            __props__.__dict__["labels"] = labels
            __props__.__dict__["metadata"] = metadata
            __props__.__dict__["name"] = name
            if network_id is None and not opts.urn:
                raise TypeError("Missing required property 'network_id'")
            __props__.__dict__["network_id"] = network_id
            if parent_id is None and not opts.urn:
                raise TypeError("Missing required property 'parent_id'")
            __props__.__dict__["parent_id"] = parent_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["resource_version"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(VpcV1Subnet, __self__).__init__(
            'nebius:index/vpcV1Subnet:VpcV1Subnet',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            ipv4_private_pools: Optional[pulumi.Input[Union['VpcV1SubnetIpv4PrivatePoolsArgs', 'VpcV1SubnetIpv4PrivatePoolsArgsDict']]] = None,
            ipv4_public_pools: Optional[pulumi.Input[Union['VpcV1SubnetIpv4PublicPoolsArgs', 'VpcV1SubnetIpv4PublicPoolsArgsDict']]] = None,
            labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            metadata: Optional[pulumi.Input[Union['VpcV1SubnetMetadataArgs', 'VpcV1SubnetMetadataArgsDict']]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            network_id: Optional[pulumi.Input[_builtins.str]] = None,
            parent_id: Optional[pulumi.Input[_builtins.str]] = None,
            resource_version: Optional[pulumi.Input[_builtins.float]] = None,
            status: Optional[pulumi.Input[Union['VpcV1SubnetStatusArgs', 'VpcV1SubnetStatusArgsDict']]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'VpcV1Subnet':
        """
        Get an existing VpcV1Subnet resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: Timestamp indicating when the resource was created. A string representing a timestamp in [ISO
               8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ` or `YYYY-MM-DDTHH:MM:SS.SSS±HH:MM`
        :param pulumi.Input[Union['VpcV1SubnetIpv4PrivatePoolsArgs', 'VpcV1SubnetIpv4PrivatePoolsArgsDict']] ipv4_private_pools: Pools for private ipv4 addresses. Default is 'use_network_pools = true'
        :param pulumi.Input[Union['VpcV1SubnetIpv4PublicPoolsArgs', 'VpcV1SubnetIpv4PublicPoolsArgsDict']] ipv4_public_pools: Pools for public ipv4 addresses. Default is 'use_network_pools = true'
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] labels: Labels associated with the resource.
        :param pulumi.Input[Union['VpcV1SubnetMetadataArgs', 'VpcV1SubnetMetadataArgsDict']] metadata: Metadata for the subnet resource. `metadata.parent_id` represents IAM container ### Inner value description Common
               resource metadata.
        :param pulumi.Input[_builtins.str] name: Human readable name for the resource.
        :param pulumi.Input[_builtins.str] network_id: Network ID.
        :param pulumi.Input[_builtins.str] parent_id: Identifier of the parent resource to which the resource belongs.
        :param pulumi.Input[_builtins.float] resource_version: Version of the resource for safe concurrent modifications and consistent reads. Positive and monotonically increases on
               each resource spec change (but *not* on each change of the resource's container(s) or status). Service allows zero value
               or current.
        :param pulumi.Input[Union['VpcV1SubnetStatusArgs', 'VpcV1SubnetStatusArgsDict']] status: Status of the subnet.
        :param pulumi.Input[_builtins.str] updated_at: Timestamp indicating when the resource was last updated. A string representing a timestamp in [ISO
               8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ` or `YYYY-MM-DDTHH:MM:SS.SSS±HH:MM`
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _VpcV1SubnetState.__new__(_VpcV1SubnetState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["ipv4_private_pools"] = ipv4_private_pools
        __props__.__dict__["ipv4_public_pools"] = ipv4_public_pools
        __props__.__dict__["labels"] = labels
        __props__.__dict__["metadata"] = metadata
        __props__.__dict__["name"] = name
        __props__.__dict__["network_id"] = network_id
        __props__.__dict__["parent_id"] = parent_id
        __props__.__dict__["resource_version"] = resource_version
        __props__.__dict__["status"] = status
        __props__.__dict__["updated_at"] = updated_at
        return VpcV1Subnet(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Timestamp indicating when the resource was created. A string representing a timestamp in [ISO
        8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ` or `YYYY-MM-DDTHH:MM:SS.SSS±HH:MM`
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="ipv4PrivatePools")
    def ipv4_private_pools(self) -> pulumi.Output['outputs.VpcV1SubnetIpv4PrivatePools']:
        """
        Pools for private ipv4 addresses. Default is 'use_network_pools = true'
        """
        return pulumi.get(self, "ipv4_private_pools")

    @_builtins.property
    @pulumi.getter(name="ipv4PublicPools")
    def ipv4_public_pools(self) -> pulumi.Output['outputs.VpcV1SubnetIpv4PublicPools']:
        """
        Pools for public ipv4 addresses. Default is 'use_network_pools = true'
        """
        return pulumi.get(self, "ipv4_public_pools")

    @_builtins.property
    @pulumi.getter
    def labels(self) -> pulumi.Output[Optional[Mapping[str, _builtins.str]]]:
        """
        Labels associated with the resource.
        """
        return pulumi.get(self, "labels")

    @_builtins.property
    @pulumi.getter
    def metadata(self) -> pulumi.Output['outputs.VpcV1SubnetMetadata']:
        """
        Metadata for the subnet resource. `metadata.parent_id` represents IAM container ### Inner value description Common
        resource metadata.
        """
        return pulumi.get(self, "metadata")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Human readable name for the resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="networkId")
    def network_id(self) -> pulumi.Output[_builtins.str]:
        """
        Network ID.
        """
        return pulumi.get(self, "network_id")

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> pulumi.Output[_builtins.str]:
        """
        Identifier of the parent resource to which the resource belongs.
        """
        return pulumi.get(self, "parent_id")

    @_builtins.property
    @pulumi.getter(name="resourceVersion")
    def resource_version(self) -> pulumi.Output[_builtins.float]:
        """
        Version of the resource for safe concurrent modifications and consistent reads. Positive and monotonically increases on
        each resource spec change (but *not* on each change of the resource's container(s) or status). Service allows zero value
        or current.
        """
        return pulumi.get(self, "resource_version")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output['outputs.VpcV1SubnetStatus']:
        """
        Status of the subnet.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Timestamp indicating when the resource was last updated. A string representing a timestamp in [ISO
        8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ` or `YYYY-MM-DDTHH:MM:SS.SSS±HH:MM`
        """
        return pulumi.get(self, "updated_at")

