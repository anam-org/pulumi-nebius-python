# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetParentIdResult',
    'AwaitableGetParentIdResult',
    'get_parent_id',
    'get_parent_id_output',
]

@pulumi.output_type
class GetParentIdResult:
    """
    A collection of values returned by getParentId.
    """
    def __init__(__self__, id=None, parent_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if parent_id and not isinstance(parent_id, str):
            raise TypeError("Expected argument 'parent_id' to be a str")
        pulumi.set(__self__, "parent_id", parent_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> _builtins.str:
        return pulumi.get(self, "parent_id")


class AwaitableGetParentIdResult(GetParentIdResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetParentIdResult(
            id=self.id,
            parent_id=self.parent_id)


def get_parent_id(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetParentIdResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('nebius:index/getParentId:getParentId', __args__, opts=opts, typ=GetParentIdResult, package_ref=_utilities.get_package()).value

    return AwaitableGetParentIdResult(
        id=pulumi.get(__ret__, 'id'),
        parent_id=pulumi.get(__ret__, 'parent_id'))
def get_parent_id_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetParentIdResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('nebius:index/getParentId:getParentId', __args__, opts=opts, typ=GetParentIdResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetParentIdResult(
        id=pulumi.get(__response__, 'id'),
        parent_id=pulumi.get(__response__, 'parent_id')))
